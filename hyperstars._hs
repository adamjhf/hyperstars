behavior Hyperstars(inputHandle, resettable, icon, resetIcon)

  init
    -- defaults
    if no icon then set icon to "★" end
    if no resetIcon then set resetIcon to "×" end
    set min to 0
    set max to 5
    set step to 0.5
    set value to 0
    set readonly to false
    if no resettable then set resettable to false end

    if no inputHandle then
      if <input[type="range"]/> in me exists then
        set inputHandle to first <input[type="range"]/> in me
      end
    end

    if inputHandle exists then
      hide inputHandle
      if @min of inputHandle exists then
        set min to @min of inputHandle
      end
      if @max of inputHandle exists then
        set max to @max of inputHandle
      end
      if @step of inputHandle exists then
        set step to @step of inputHandle
      end
      if @value of inputHandle exists then
        set value to @value of inputHandle
      end
      if @readonly of inputHandle exists
        or @disabled of inputHandle exists then
        set readonly to true
      end
    end

    add .hyperstars to me

    if resettable then
      make a <span/>
      put resetIcon into it
      set span to it
      make a <button.hyperstars-reset/>
      set @type of it to "reset"
      set @aria-label of it to "star rating reset"
      set @_ of it to "on click send reset to next .hyperstars-slider"
      put span into it
      put it at the end of me
    end

    make a <div.hyperstars-slider/>
    set @_ of it to "install HyperstarsSlideable"
    set @role of it to "slider"
    set @aria-valuenow of it to value
    set @aria-valuemin of it to min
    set @aria-valuemax of it to max
    set @aria-readonly of it to readonly
    set @data-hs-step of it to step
    set @aria-label of it to "star rating"
    if not readonly then set @tabindex of it to 0 end
    set parent to it
    
    make a <div.hyperstars-empty/>
    put it into parent

    make a <div.hyperstars-selected/>
    set the *width of it to "0px"
    show it
    put it at the end of parent

    make a <div.hyperstars-hover/>
    set the *width of it to "0px"
    hide it
    put it at the end of parent

    set stars to max - min
    tell <div /> in parent
      repeat stars times
        put icon at the end of you
      end
    end

    put parent at the end of me

    tell .hyperstars-selected in me
      get previous .hyperstars-empty
      measure its width
      set initW to calculateStarWidth(value, min, max, width)
      set your *width to initW + "px"
    end

end


behavior HyperstarsSlideable

  on mouseenter
    if @aria-readonly is "true" then exit end
    tell .hyperstars-hover in me
      show you
    end
    tell .hyperstars-selected in me
      hide you
    end
  end

  on mouseleave
    if @aria-readonly is "true" then exit end
    tell .hyperstars-hover in me
      hide you
    end
    tell .hyperstars-selected in me
      show you
    end
  end

  on mousemove(pageX)
    if @aria-readonly is "true" then exit end
    set max to @aria-valuemax as Number
    set min to @aria-valuemin as Number
    set step to @data-hs-step as Number
    measure my x, width
    set value to calculateStarValue(x, pageX, min, max, step, width)
    set w to calculateStarWidth(value, min, max, width)
    set hover to the .hyperstars-hover in me
    pick match of "^(.+)px$" from the width of hover's style
    set curWidth to it[1] as Int
    if curWidth is not w then
      tell the .hyperstars-selected in me
        hide you
      end
      tell the .hyperstars-hover in me
        show you
        set your *width to w + "px"
      end
    end
  end

  on mouseup(pageX)
    if @aria-readonly is "true" then exit end
    set max to @aria-valuemax as Number
    set min to @aria-valuemin as Number
    set step to @data-hs-step as Number
    measure my x, width
    set value to calculateStarValue(x, pageX, min, max, step, width)
    set w to calculateStarWidth(value, min, max, width)
    set @aria-valuenow to value
    tell first <input[type="range"]/> in my parentElement
      set @value to value
    tell .hyperstars-hover in me
      hide you
    end
    tell .hyperstars-selected in me
      set your *width to w + "px"
      show you
    end
    trigger rated(value: value)
  end

  on touchmove(event)
    halt the event
    trigger mousemove(pageX: event.changedTouches[0].pageX)
  end

  on touchend(event)
    halt the event
    trigger mouseup(pageX: event.changedTouches[0].pageX)
  end

  on reset
    set @aria-valuenow to 0
    tell .hyperstars-selected in me
      set your *width to "0px"
    end
  end

end

def calculateStarValue(x, pageX, min, max, step, width)
  set stars to max - min
  set offset to pageX - x
  if offset > width then set offset to width end
  return min + (Math.ceil(offset / (width / (stars / step))) * step)
end

def calculateStarWidth(value, min, max, width)
  return Math.round((value-min) * (width / (max-min)))
end
